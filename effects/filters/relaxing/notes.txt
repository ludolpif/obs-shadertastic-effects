// Derived from https://www.shadertoy.com/view/DlKSRw

vec3 palette( float t )
{
    vec3 a = vec3(0.980,0.625,0.923);
    vec3 b = vec3(0.673,0.343,0.464);
    vec3 c = vec3(1.143,1.182,1.524);
    vec3 d = vec3(1.306,2.887,3.029);
    return a+b*cos(6.28318*(c*t+d));
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    float loops = 8.0;
    float thickness = 0.4;
    float brightness = 0.1;
    float colorVariationPerIteration = 4.0;
    float colorVariationSpeed = 0.1;
    float iterations = 8.0;
    float complexityVariationSpeed = 0.1;
    float animationSpeed = 0.05;
    float complexity = 1.25+0.25*sin(4.71+iTime*complexityVariationSpeed);


    vec2 uv = ( 2.0 * fragCoord - iResolution.xy) / iResolution.y;
    vec2 uv0 = uv;
    
    vec3 finalColor = vec3(0.0);
    
    for ( float i = 0.0; i < iterations; i++) {
        uv = fract(uv*complexity);
        uv -= .5;

        float d = length(uv) * exp(-length(uv0));
        vec3 color = palette(length(uv0) + i * colorVariationPerIteration + iTime*colorVariationSpeed);

        d = sin(d* loops + iTime*animationSpeed) / thickness;
        d = abs(d);

        d = pow(brightness / d, 2.0);

        finalColor += color * d;  
    }
    
    fragColor = vec4(finalColor,1.0); 
}
